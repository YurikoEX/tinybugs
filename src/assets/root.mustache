<html>
<head>
  <title>{{app.name}} - Issues</title>
  <link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css" rel="stylesheet">
  <link href="{{app.path}}assets/css/tinybugs.css" rel="stylesheet" />
</head>
<body>
<div class="container">
  <div class="row">
    <div class="span12">
       <h1>{{app.name}}{{#app.subname}} <small>{{app.subname}}</small>{{/app.subname}}</h1>
    </div>
  </div>
<div class="row">
<div class="span9">
<h3>
Issues:
</h3>
<table class="table table-striped table-condensed">
<thead>
<tr>
<th>#</th>
<th>Title</th>
<th>Status</th>
<th>Assigned to</th>
<th>Opened</th>
<th>Updated</th>
</tr>
</thead>
<tbody>
{{#issues}}
<tr>
<td><a href="/edit/{{id}}">{{id}}</a></td>
<td><a href="/{{id}}/">{{title}}</a></td>
<td>
<a href="{{app.path}}?filter=status:{{status}}"><span class="label label-info" style="margin-bottom:4px">{{status}}</span></a>
{{#resolution}}<a href="{{app.path}}?filter=status:{{status}}&filter=resolution:{{resolution}}"><span class="label label-info">{{resolution}}</span></a> {{/resolution}}
<a href="{{app.path}}?filter=release:{{release}}"><span class="label label-success">{{release}}</span></a>
</td>
<td>{{assignedtousername}}</td>
<td>{{createdat}}</td>
<td>{{updatedat}}</td>
</tr>
{{/issues}}
{{^issues}}
<tr><td colspan="7">No issues found.</td></tr>
{{/issues}}
</tbody>
</table>
{{#page}}
{{#previousUrl}}
<a href="{{previousUrl}}">Previous</a>
{{/previousUrl}}
{{#nextUrl}}
<a href="{{nextUrl}}">Next</a>
{{/nextUrl}}
{{/page}}

<hr>
<h3>Additional options.</h3>
<p>
Search syntax: ?[filter=column:value]&[sort=column[:desc]]&[search=query]&[page=#]&[count=#]
</p>
<dl>
<dt>filter</dt><dd>filter the results of columns that contain based on the 'value'.</dd>
<dt>sort</dt><dd>sort the results on a column, optionally descending by adding the "desc" modifier.</dd>
<dt>search</dt><dd>query the result text.</dd>
<dt>page</dt><dd>page of the results to return.</dd>
<dt>count</dt><dd>number of the issues to return per page.</dd>
</dl>
<p>
The `filter`, `sort` and `search` queries are additive such that multiple columns or search
terms can be filtered, sorted and searched. The `page` and `count` modifiers are singletons and
the last appearance is used.
</p>
<p>
Some example queries:
</p>
<dl>
<dt><a href="?sort=id:desc">?sort=id:desc</a></dt><dd>Return the list of issues in reverse default order.</dd>
<dt><a href="?filter=type:Bug">?filter=type:Bug</a></dt><dd>Return the list of bugs.</dd>
<dt><a href="?search=longer+old">?search=old</a></dt><dd>Return the list of issues that have "longer" and "old" in their title, text or comments.</dd>
<dt><a href="?page=2&count=1">?page=2&count=1</a></dt><dd>Return the second page where there is only one issue per page.</dd>
</dl>
</div>
<div class="span3">
<div class="well well-small">
  <p><a href="/new/" class="btn">New issue...</a></p>
  <h4>Releases</h4>
  <ul>
    <li><a href="{{app.path}}">All releases</a></li>
{{#app.releases}}
    <li><a href="{{app.path}}?filter=release:{{name}}">{{name}}</a></li>
{{/app.releases}}
  </ul>
</div>
</div>
</div>
</div>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"></script>
<script src="{{app.path}}assets/js/tinybugs.js"></script>
</body>
</html>
